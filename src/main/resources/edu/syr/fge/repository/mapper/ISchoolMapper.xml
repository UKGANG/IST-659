<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.syr.fge.repository.mapper.ISchoolMapper">
	<select id="getUser" resultType="edu.syr.fge.domain.Participant">
		SELECT p.participant_id AS participantId 
			, p.email AS email 
			, p.phone_no AS phoneNo 
			, p.first_name AS firstName 
			, p.middle_name AS middleName 
			, p.last_name AS lastName 
			, p.gender AS gender 
			, p.dob AS dob 
			, p.age AS age 
			, p.ssn AS ssn 
			, p.created_datetime as createdDate 
			, p.no_show_count as noShowCount 
		FROM IST659_M002_jjian03.dbo.participant p
		JOIN IST659_M002_jjian03.dbo.credential c ON p.participant_id = c.participant_id
		WHERE p.email = #{email}
		AND c.password = #{password};
	</select>

	<select id="getCourts" resultType="edu.syr.fge.api.serializer.CourtDto">
		SELECT court_id AS courtId 
			, court_name AS courtName 
		FROM IST659_M002_jjian03.dbo.court;
	</select>

	<resultMap type="edu.syr.fge.domain.AvailableActivity" id="AvailableActivity">
        <association property="court"
                     javaType="edu.syr.fge.domain.Court" columnPrefix="c_" >
            <id property="courtId" column="id" />
        </association>
        <association property="activityType"
                     javaType="edu.syr.fge.domain.ActivityType" columnPrefix="a_" >
            <id property="activityTypeId" column="id" />
            <id property="activityName" column="name" />
        </association>
    </resultMap>

	<select id="getAvailableActivities" resultMap="AvailableActivity">
		SELECT 
			c.court_id AS c_id
			, a.activity_type_id AS a_id 
			, a.activity_name AS a_name 
		FROM IST659_M002_jjian03.dbo.activity_type a
		JOIN IST659_M002_jjian03.dbo.available_activity aa ON a.activity_type_id = aa.activity_type_id 
		JOIN IST659_M002_jjian03.dbo.court c ON aa.court_id = c.court_id 
		WHERE 
		<choose>
			<when test="courtIds==null || courtIds.isEmpty()">
				1 = 1 
			</when>
			<otherwise>
				c.court_id IN 
				<foreach item="courtId" index="index" collection="courtIds" open="(" separator="," close=")">
					#{courtId}
				</foreach>;
			</otherwise>
		</choose>
	</select>
<!-- 
	<resultMap type="edu.syr.fge.domain.CourtReservation" id="CourtReservation">
        <id property="reservationId" column="reservation_id" />
        <association property="participant"
                     javaType="edu.syr.fge.domain.Participant" columnPrefix="p_" >
            <id property="participantId" column="id" />
            
        </association>
    </resultMap> -->

	<resultMap type="edu.syr.fge.domain.Timeslot" id="Timeslot">
        <id property="timeslotId" column="timeslot_id" />
        <id property="reservationId" column="reservation_id" />
        <id property="startDatetime" column="start_datetime" />
        <id property="endDatetime" column="end_datetime" />
        <association property="court"
                     javaType="edu.syr.fge.domain.Court" columnPrefix="c_" >
            <id property="courtId" column="id" />
        </association>
        <association property="participant"
                     javaType="edu.syr.fge.domain.Participant" columnPrefix="p_" >
            <id property="participantId" column="id" />
            
        </association>
        <association property="activityType"
                     javaType="edu.syr.fge.domain.ActivityType" columnPrefix="a_" >
            <id property="activityTypeId" column="id" />
            <id property="activityName" column="name" />
            
        </association>
    </resultMap>

    <select id="getTimeslots" resultMap="Timeslot">
		SELECT t.timeslot_id
			, t.start_datetime
			, t.end_datetime
			, t.start_datetime
			, t.end_datetime
			, r.reservation_id
			, r.court_id AS c_id
			, p.participant_id AS p_id
			, p.first_name AS p_first_name 
			, p.middle_name AS p_middle_name 
			, p.last_name AS p_last_name 
			, a.activity_type_id AS a_id
			, a.activity_name AS a_name
		FROM IST659_M002_jjian03.dbo.timeslot t 
		JOIN IST659_M002_jjian03.dbo.reservation r ON t.reservation_id = r.reservation_id 
		JOIN IST659_M002_jjian03.dbo.participant p ON r.organizer_id = p.participant_id 
		JOIN IST659_M002_jjian03.dbo.activity_type a ON r.activity_type_id = a.activity_type_id 
    	WHERE CAST(r.reservation_date AS DATE) = CAST(#{reservationDate} AS DATE);
    </select>

    <insert id="createOrganizer" useGeneratedKeys="true" keyProperty="organizerId" keyColumn="organizer_id">
		INSERT INTO IST659_M002_jjian03.dbo.organizer
		(participant_id, created_datetime)
		VALUES(#{organizer.participantId}, #{organizer.createdDatetime});
    </insert>

    <insert id="createCourtReservation" useGeneratedKeys="true" keyProperty="reservationId" keyColumn="reservation_id">
		INSERT INTO IST659_M002_jjian03.dbo.reservation
		(organizer_id, court_id, activity_type_id, reservation_code, reservation_date, participant_count)
		VALUES(#{reservation.organizerId}
			, #{reservation.courtId}
			, #{reservation.activityTypeId}
			, #{reservation.reservationCode}
			, #{reservation.reservationDate}
			, #{reservation.participantCount});
    </insert>

    <insert id="createTimeslots" useGeneratedKeys="true">
		INSERT INTO IST659_M002_jjian03.dbo.timeslot
		(reservation_id, start_datetime, end_datetime)
		VALUES
		<foreach item="timeslot" index="index" collection="timeslots" separator=",">
			(#{timeslot.reservationId}, #{timeslot.startDatetime}, #{timeslot.endDatetime})
		</foreach>;
		;
    </insert>

    <delete id="removeTimeslots">
        DELETE FROM IST659_M002_jjian03.dbo.timeslot 
        WHERE timeslot_id IN 
        <foreach item="timeslot" index="index" collection="timeslots" open="(" separator="," close=")">
			#{timeslot.timeslotId}
		</foreach>;
    </delete>

    <update id="checkIn">
         UPDATE IST659_M002_jjian03.dbo.reservation SET checked_in=1 
         WHERE reservation_code=#{reservationCode}; 
    </update>
    
    
    
	<resultMap type="edu.syr.fge.repository.vo.GearVo" id="Gear">
        <id property="gearId" column="gear_id" />
        <id property="useFrequencyCount" column="use_frequency_count" />
        <id property="brand" column="brand" />
        <id property="status" column="status" />
        <association property="gearType"
                     javaType="edu.syr.fge.domain.GearType" columnPrefix="g_" >
            <id property="gearTypeId" column="id" />
            <id property="gearTypeName" column="name" />
        </association>
    </resultMap>

    <select id="retrieveGears" resultMap="Gear">
		SELECT g.gear_id 
			, g.use_frequency_count 
			, g.brand 
			, gt.gear_type_id AS g_id 
			, gt.gear_name AS g_name 
			, CASE 
				WHEN rh.rental_history_id IS NOT NULL AND rh.return_datetime IS NULL THEN 'Rent out'
				ELSE 'Available' END AS status
		FROM IST659_M002_jjian03.dbo.reservation r 
		JOIN IST659_M002_jjian03.dbo.activity_type atp ON r.activity_type_id = atp.activity_type_id 
		JOIN IST659_M002_jjian03.dbo.relevant_gear rg ON atp.activity_type_id = rg.activity_type_id 
		JOIN IST659_M002_jjian03.dbo.gear g ON rg.gear_id = g.gear_id 
		JOIN IST659_M002_jjian03.dbo.gear_type gt ON g.gear_type_id = gt.gear_type_id 
		LEFT JOIN IST659_M002_jjian03.dbo.rental_history rh ON g.gear_id = rh.gear_id
		WHERE r.reservation_code=#{reservationCode}
		ORDER BY atp.activity_type_id ASC;
    </select>

    <select id="retrieveGearsByType" resultMap="Gear">
		SELECT g.gear_id 
			, g.use_frequency_count 
			, g.brand 
			, gt.gear_type_id AS g_id 
			, gt.gear_name AS g_name 
			, CASE 
				WHEN rh.rental_history_id IS NOT NULL AND rh.return_datetime IS NULL THEN 'Rent out'
				ELSE 'Available' END AS status
		FROM IST659_M002_jjian03.dbo.activity_type atp 
		JOIN IST659_M002_jjian03.dbo.relevant_gear rg ON atp.activity_type_id = rg.activity_type_id 
		JOIN IST659_M002_jjian03.dbo.gear g ON rg.gear_id = g.gear_id 
		JOIN IST659_M002_jjian03.dbo.gear_type gt ON g.gear_type_id = gt.gear_type_id 
		LEFT JOIN IST659_M002_jjian03.dbo.rental_history rh ON g.gear_id = rh.gear_id
		WHERE gt.gear_type_id=#{gearTypeId}
		AND rh.rental_history_id IS NULL
		ORDER BY atp.activity_type_id ASC;
    </select>

    <select id="retrieveReservationByCode" resultType="edu.syr.fge.repository.vo.ReservationVo">
		SELECT reservation_id AS reservationId 
			, organizer_id AS organizerId 
			, court_id AS courtId 
			, activity_type_id AS activityTypeId 
			, reservation_code AS reservationCode 
			, reservation_date AS reservationDate 
			, participant_count AS participantCount 
		FROM IST659_M002_jjian03.dbo.reservation 
		WHERE reservation_code=#{reservationCode};
    </select>

    <insert id="rentGears" useGeneratedKeys="true">
		INSERT INTO IST659_M002_jjian03.dbo.rental_history
		(organizer_id, gear_id, borrow_datetime, return_datetime)
		VALUES
        <foreach item="gearId" index="index" collection="gearIds" separator=",">
			(#{organizerId}, #{gearId}, getdate(), NULL)
		</foreach>;
    </insert>

    <update id="returnGears">
         UPDATE IST659_M002_jjian03.dbo.rental_history SET return_datetime=getdate() 
         FROM IST659_M002_jjian03.dbo.rental_history r 
         JOIN IST659_M002_jjian03.dbo.gear g ON r.gear_id = g.gear_id 
         WHERE g.gear_id IN 
		<foreach item="gearId" index="index" collection="gearIds" open="(" separator="," close=")">
			#{gearId}
		</foreach>;
    </update>

	<resultMap type="edu.syr.fge.domain.GearType" id="GearType">
        <id property="gearTypeId" column="gear_type_id" />
        <id property="gearTypeName" column="gear_name" />
    </resultMap>


    <select id="getGearTypes" resultMap="GearType">
		SELECT 
			gear_type_id
			, gear_name
		FROM IST659_M002_jjian03.dbo.gear_type
		ORDER BY gear_type_id ASC;
    </select>

    <update id="refrubish">
         UPDATE IST659_M002_jjian03.dbo.gear SET use_frequency_count = 0
         WHERE gear_id IN 
		<foreach item="gearId" index="index" collection="gearIds" open="(" separator="," close=")">
			#{gearId}
		</foreach>;
    </update>

	<resultMap type="edu.syr.fge.api.serializer.UserDto" id="UserDto">
        <id property="participantId" column="participant_id" />
        <id property="email" column="email" />
        <id property="phoneNo" column="phone_no" />
        <id property="firstName" column="first_name" />
        <id property="middleName" column="middle_name" />
        <id property="lastName" column="last_name" />
        <id property="gender" column="gender" />
        <id property="dob" column="dob" />
        <id property="ssn" column="ssn" />
    </resultMap>

    <select id="searchParticipants" resultMap="UserDto">
	SELECT 
		participant_id
		, email
		, phone_no
		, first_name
		, middle_name
		, last_name
		, gender
		, dob
		, age
		, ssn
		, created_datetime
		, no_show_count
	FROM IST659_M002_jjian03.dbo.participant
		<choose>
			<when test="email == null || email.length() == 0">
			</when>
			<otherwise>
				WHERE email=#{email}
			</otherwise>
		</choose>;
    </select>

    <insert id="createCredential" useGeneratedKeys="true">
		INSERT INTO IST659_M002_jjian03.dbo.credential
		(participant_id, password, activated_datetime)
		VALUES(#{participant.participantId}, #{participant.password}, getdate());
    </insert>

    <insert id="createParticipant" useGeneratedKeys="true" keyProperty="participantId" keyColumn="participant_id">
		INSERT INTO IST659_M002_jjian03.dbo.participant
		(email, phone_no, first_name, middle_name, last_name, gender, dob, age, ssn, created_datetime, no_show_count)
		VALUES(#{participant.email}, #{participant.phoneNo}, #{participant.firstName}, #{participant.middleName}, #{participant.lastName}
		, #{participant.gender}, #{participant.dob}, null, #{participant.ssn}, getdate(), 0);
    </insert>

    <insert id="updateCredential" useGeneratedKeys="true">
		UPDATE IST659_M002_jjian03.dbo.credential SET password = #{participant.password}
		WHERE participant_id = #{participant.participantId};
    </insert>

    <insert id="updateParticipant" useGeneratedKeys="true" keyProperty="participantId" keyColumn="participant_id">
		UPDATE IST659_M002_jjian03.dbo.participant
		SET email=#{participant.email}
		, phone_no=#{participant.phoneNo}
		, first_name=#{participant.firstName}
		, middle_name=#{participant.middleName}
		, last_name=#{participant.lastName}
		, gender=#{participant.gender}
		, dob=#{participant.dob}
		, ssn=#{participant.ssn}
		WHERE participant_id=#{participant.participantId};
    </insert>

	<resultMap type="edu.syr.fge.api.serializer.PageTypeDto" id="PageType">
        <id property="pageTypeId" column="page_type_id" />
        <id property="pageName" column="page_name" />
    </resultMap>


    <select id="retrievePageTypes" resultMap="PageType">
		SELECT page_type_id, page_name
		FROM IST659_M002_jjian03.dbo.page_type
		ORDER BY page_type_id ASC;
    </select>

	<resultMap type="edu.syr.fge.api.serializer.RoleDto" id="Role">
        <id property="roleId" column="role_id" />
        <association property="pageType"
                     javaType="edu.syr.fge.api.serializer.PageTypeDto" columnPrefix="pt_" >
            <id property="pageTypeId" column="id" />
            <id property="pageName" column="name" />
        </association>
        <association property="user"
                     javaType="edu.syr.fge.api.serializer.UserDto" columnPrefix="p_" >
            <id property="participantId" column="id" />
        </association>
    </resultMap>

    <select id="getPageAccessList" resultMap="Role">
		SELECT 
			r.role_id
			, pt.page_type_id AS pt_id
			, pt.page_name AS pt_name 
			, p.participant_id AS p_id 
		FROM IST659_M002_jjian03.dbo.role r 
		JOIN IST659_M002_jjian03.dbo.page_type pt ON r.page_type_id = pt.page_type_id 
		JOIN IST659_M002_jjian03.dbo.participant p ON r.participant_id = p.participant_id 
		<choose>
			<when test="pageTypeId == null || pageTypeId == 0">
			</when>
			<otherwise>
				WHERE pt.page_type_id = #{pageTypeId}
			</otherwise>
		</choose>
		ORDER BY pt.page_type_id ASC;
    </select>
</mapper>